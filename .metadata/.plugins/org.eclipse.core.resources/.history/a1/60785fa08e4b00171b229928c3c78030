/**
 * 
 */
package com.liangjt.auth;

import org.apache.cxf.binding.soap.SoapMessage;
import org.apache.cxf.interceptor.Fault;
import org.apache.cxf.phase.AbstractPhaseInterceptor;
import org.apache.cxf.phase.Phase;

/**
 * Phase 阶段
 * 通过PhaseInterceptor，可以指定拦截器在哪个阶段起作用
 * @author Administrator
 *
 */
public class AuthInInterceptor extends AbstractPhaseInterceptor<SoapMessage> {
	
	 public AuthInInterceptor() {
		//显示调用父类有参数的构造器
		//显示构造父类构造器之后，程序不会调用父类无参构造器
		 //该拦截器将会在调用之前拦截soap消息
		super(Phase.PRE_INVOKE);
	}

	//需要实现自己的拦截器，需要实现handleMessage，形参就是拦截到的消息
	//一旦程序获得了soap消息，就可以解析soap消息，或者修改soap。
	@Override
	public void handleMessage(SoapMessage message) throws Fault {
		System.out.println("--------");
	}
	
	
	

}
